name: Build and Push Docker Image

on:
  push:
    branches:
      - main 
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
    
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/flutter-dobu:latest .
      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/flutter-dobu:latest
          
      # - name: Install Docker Compose
      #   run: |
      #     curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
      #     chmod +x /usr/local/bin/docker-compose
      
      # # .env 파일 생성
      # - name: Create .env file for Docker Compose
      #   run: |
      #     echo "DOCKER_HUB_USERNAME=${{ secrets.DOCKER_HUB_USERNAME }}" > .env

      # # Docker Compose 빌드 및 푸시
      # - name: Build and push images using Docker Compose
      #   run: |
      #     docker-compose -f docker-compose.yml build
      #     docker-compose -f docker-compose.yml push

      # 배포
      - name: SSH to EC2 and pull the latest Docker image
        uses: appleboy/ssh-action@master  
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            mkdir -p /home/ubuntu/dobu/frontend
            cd /home/ubuntu/dobu/frontend
            sudo docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/flutter-dobu:latest
            sudo docker run -d -p 80:80 ${{ secrets.DOCKER_HUB_USERNAME }}/flutter-dobu:latest
            
 
# sudo docker-compose pull
# sudo docker-compose down
# sudo docker-compose up -d
# sudo docker-compose ps

      
# name: Flutter CI

# on:
#   push:
#     branches:
#       - main
#   pull_request:

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#     # 1. 저장소 코드 체크아웃
#     - name: Checkout repository
#       uses: actions/checkout@v3

#     # 2. Flutter 설치
#     - name: Install Flutter
#       uses: subosito/flutter-action@v2
#       with:
#         flutter-version: '3.22.2'

#     # 3. Flutter Doctor (옵션)
#     - name: Run Flutter Doctor
#       run: flutter doctor -v
#       working-directory: ./prob

#     # 4. 의존성 설치
#     - name: Install dependencies
#       run: flutter pub get
#       working-directory: ./prob

#     # 5. 테스트 실행
#     # - name: Run tests
#     #   run: flutter test
#     #   working-directory: ./prob

#     # 6. 빌드 실행 (선택)
#     - name: Build Web
#       run: flutter build web
#       working-directory: ./prob
